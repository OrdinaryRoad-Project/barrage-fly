import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as i,c as r,b as n,d as a,e,a as t}from"./app-daa97731.js";const c="/ordinaryroad-barrage-fly/assets/image/QQPD.jpg",p="/ordinaryroad-barrage-fly/assets/image/WeChatPD.jpg",d={},u=n("h1",{id:"_2-项目部署",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-项目部署","aria-hidden":"true"},"#"),a(" 2 项目部署")],-1),k=n("p",null,"项目前后端分离，可以使用Docker Compose进行部署，或者clone项目到本地后分别打包后部署",-1),m={href:"https://barragefly.ordinaryroad.tech:7000",target:"_blank",rel:"noopener noreferrer"},v=n("li",null,"WebSocket地址：wss://barragefly.ordinaryroad.tech:7100",-1),b={href:"https://pd.qq.com/s/3id0n7fvs",target:"_blank",rel:"noopener noreferrer"},y=n("br",null,null,-1),h=n("img",{src:c,width:"400"},null,-1),_=n("img",{src:p,width:"400"},null,-1),g=t('<h2 id="_2-1-docker-compose" tabindex="-1"><a class="header-anchor" href="#_2-1-docker-compose" aria-hidden="true">#</a> 2.1 Docker Compose</h2><h3 id="_2-1-0-tips" tabindex="-1"><a class="header-anchor" href="#_2-1-0-tips" aria-hidden="true">#</a> 2.1.0 Tips</h3><ul><li>Docker Compose示例位于<code>.docker</code>目录中 <ul><li><code>compose.yaml</code>: 前端+后端，需要手动初始化数据库</li><li><code>compose-with-mysql.yaml</code>: 前端+后端+MySQL</li><li><code>compose-with-nginx.yaml</code>: 前端+后端+Nginx，需要手动初始化数据库</li><li><code>compose-with-mysql-nginx.yaml</code>: 前端+后端+MySQL+Nginx</li></ul></li><li>数据库初始化SQL文件位于<code>.docker/ordinaryroad-barrage-fly-mysql/sql/or_barrage_fly.sql</code></li><li>使用MySQL或Nginx时需要先build <ul><li><code>docker compose -f compose.yaml build ordinaryroad-barrage-fly-mysql</code></li><li><code>docker compose -f compose.yaml build ordinaryroad-barrage-fly-nginx</code></li></ul></li></ul>',3),f={href:"https://ordinaryroad.coding.net/public-artifacts/ordinaryroad-barrage-fly/docker-pub/packages",target:"_blank",rel:"noopener noreferrer"},S=t(`<h3 id="_2-1-1-example" tabindex="-1"><a class="header-anchor" href="#_2-1-1-example" aria-hidden="true">#</a> 2.1.1 Example</h3><p>下面是一个部署前端+后端的示例，请确保以下端口号未被占用，或者修改为其他端口</p><ul><li>后端：8080，9898</li><li>前端：30000</li></ul><p>1 新建一个文件夹，文件夹内只需要一个<code>.env</code>文件和一个<code>compose.yaml</code>文件，文件内容在步骤后面</p><p>2 拉取镜像</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># DOCKER_OPTS=&quot;--registry-mirror=https://mirror.ccs.tencentyun.com&quot;</span>
<span class="token comment"># 拉取最新版1.5.0</span>
<span class="token function">docker</span> pull ordinaryroad-docker.pkg.coding.net/ordinaryroad-barrage-fly/docker-pub/ordinaryroad-barrage-fly:1.5.0
<span class="token function">docker</span> pull ordinaryroad-docker.pkg.coding.net/ordinaryroad-barrage-fly/docker-pub/ordinaryroad-barrage-fly-ui:1.5.0 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3 给镜像重新打TAG</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> tag ordinaryroad-docker.pkg.coding.net/ordinaryroad-barrage-fly/docker-pub/ordinaryroad-barrage-fly:1.5.0 ordinaryroad-barrage-fly
<span class="token function">docker</span> tag ordinaryroad-docker.pkg.coding.net/ordinaryroad-barrage-fly/docker-pub/ordinaryroad-barrage-fly-ui:1.5.0 ordinaryroad-barrage-fly-ui
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>4 进入<code>compose.yaml</code>文件所在的文件夹，执行启动容器命令<code>docker compose up -d</code></p>`,9),A={href:"http://localhost:30000",target:"_blank",rel:"noopener noreferrer"},x=t(`<h4 id="env" tabindex="-1"><a class="header-anchor" href="#env" aria-hidden="true">#</a> .env</h4><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># .env</span>
<span class="token comment"># TODO 根据实际部署情况修改</span>
<span class="token comment"># 注意：请勿用localhost、127.0.0.1，要求能够被容器访问到的地址</span>
<span class="token key attr-name">MYSQL_HOST</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.1.2</span>
<span class="token key attr-name">MYSQL_PORT</span><span class="token punctuation">=</span><span class="token value attr-value">3306</span>
<span class="token key attr-name">MYSQL_DATABASE</span><span class="token punctuation">=</span><span class="token value attr-value">or_barrage_fly</span>
<span class="token key attr-name">MYSQL_USERNAME</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">MYSQL_PASSWORD</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token comment"># TODO 根据实际部署情况修改</span>
<span class="token comment"># 主机名要求能够被浏览器等客户端访问到，端口为容器映射到主机的端口，默认9898</span>
<span class="token key attr-name">SUB_BASE_URL</span><span class="token punctuation">=</span><span class="token value attr-value">ws://localhost:9898</span>
<span class="token comment"># TODO 管理后台的账号密码</span>
<span class="token key attr-name">ADMIN_USERNAME</span><span class="token punctuation">=</span><span class="token value attr-value">admin</span>
<span class="token key attr-name">ADMIN_PASSWORD</span><span class="token punctuation">=</span><span class="token value attr-value">admin</span>
<span class="token comment"># TODO 根据实际需要修改</span>
<span class="token key attr-name">JAVA_OPTS</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;-Xmn256m&quot;</span>
<span class="token comment"># 主机名要求能够被浏览器等客户端访问到，端口号为容器映射到主机的端口，默认8080</span>
<span class="token key attr-name">SPRING_BOOT_ADMIN_BASE_URL</span><span class="token punctuation">=</span><span class="token value attr-value">http://localhost:8080/admin</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="compose-yaml" tabindex="-1"><a class="header-anchor" href="#compose-yaml" aria-hidden="true">#</a> compose.yaml</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># compose.yaml</span>
<span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&quot;3.0&quot;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">ordinaryroad-barrage-fly-ui</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> ordinaryroad<span class="token punctuation">-</span>barrage<span class="token punctuation">-</span>fly<span class="token punctuation">-</span>ui
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> ordinaryroad<span class="token punctuation">-</span>barrage<span class="token punctuation">-</span>fly<span class="token punctuation">-</span>ui
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">BASE_URL</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//ordinaryroad<span class="token punctuation">-</span>barrage<span class="token punctuation">-</span>fly<span class="token punctuation">:</span><span class="token number">8080</span>
      <span class="token key atrule">SPRING_BOOT_ADMIN_BASE_URL</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>8080/admin
      <span class="token key atrule">SUB_BASE_URL</span><span class="token punctuation">:</span>
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;30000:3000&quot;</span>
    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> ordinaryroad<span class="token punctuation">-</span>barrage<span class="token punctuation">-</span>fly<span class="token punctuation">-</span>ui
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always

  <span class="token key atrule">ordinaryroad-barrage-fly</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> ordinaryroad<span class="token punctuation">-</span>barrage<span class="token punctuation">-</span>fly
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> ordinaryroad<span class="token punctuation">-</span>barrage<span class="token punctuation">-</span>fly
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">MYSQL_HOST</span><span class="token punctuation">:</span>
      <span class="token key atrule">MYSQL_PORT</span><span class="token punctuation">:</span>
      <span class="token key atrule">MYSQL_DATABASE</span><span class="token punctuation">:</span>
      <span class="token key atrule">MYSQL_USERNAME</span><span class="token punctuation">:</span>
      <span class="token key atrule">MYSQL_PASSWORD</span><span class="token punctuation">:</span>
      <span class="token key atrule">ADMIN_USERNAME</span><span class="token punctuation">:</span>
      <span class="token key atrule">ADMIN_PASSWORD</span><span class="token punctuation">:</span>
      <span class="token key atrule">JAVA_OPTS</span><span class="token punctuation">:</span>
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token comment"># 用于访问Spring Boot Admin</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;8080:8080&quot;</span>
      <span class="token comment"># 用于连接RSocket</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;9898:9898&quot;</span>
    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> ordinaryroad<span class="token punctuation">-</span>barrage<span class="token punctuation">-</span>fly
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-2-本地打包运行" tabindex="-1"><a class="header-anchor" href="#_2-2-本地打包运行" aria-hidden="true">#</a> 2.2 本地打包运行</h2><ol><li>clone项目到本地</li><li>后端打包 <code>./gradlew clean bootJar</code></li><li>前端打包 <code>npm install &amp;&amp; npm run build</code></li></ol>`,6);function O(M,D){const s=l("ExternalLinkIcon");return i(),r("div",null,[u,k,n("ul",null,[n("li",null,[a("演示DEMO："),n("a",m,[a("https://barragefly.ordinaryroad.tech:7000"),e(s)])]),v]),n("blockquote",null,[n("p",null,[a("帐号请前往"),n("a",b,[a("QQ频道"),e(s)]),a("获取"),y,h,_])]),g,n("p",null,[a("镜像加速与拉取："),n("a",f,[a("仓库链接"),e(s)])]),S,n("p",null,[a("5 浏览器访问 "),n("a",A,[a("http://localhost:30000"),e(s)])]),x])}const L=o(d,[["render",O],["__file","index.html.vue"]]);export{L as default};
